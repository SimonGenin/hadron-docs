webpackJsonp([0xd9f20b84a2e3],{318:function(e,a){e.exports={data:{markdownRemark:{html:'<p><strong>Hadron\'s purpose is to facilitate the building of Node.js applications:</strong></p>\n<h3 id="low-level-framework-agnostic"><a href="#low-level-framework-agnostic" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Low-level framework-agnostic</h3>\n<p>Your application is built independently from other frameworks (Express, Koa). Hadron creates a layer between HTTP requests and your app written in plain Javascript.</p>\n<p>Hadron abstracts away underlying request and response objects, providing simple data structures as input/output of your routes\' handlers, making them simple to test and easy to deal with.</p>\n<h3 id="dependency-injection"><a href="#dependency-injection" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Dependency injection</h3>\n<p>The dependency injection pattern enables you to easily change interface implementation. Hadron gives us the power to create SOLID applications.</p>\n<p>Containers as a dependency management solution provides a convenient way to access all dependencies in functions.</p>\n<h3 id="modular-structure"><a href="#modular-structure" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Modular structure</h3>\n<p>The modular structure enables you to add/remove packages or create your own extensions. Hadron provides a complete solution for request processing using separate packages.</p>\n<p>Current packages:</p>\n<ul>\n<li>security management</li>\n<li>input validation</li>\n<li>database integration (through TypeORM)</li>\n<li>data serialization</li>\n<li>logging</li>\n<li>events handling</li>\n<li>CLI tool</li>\n</ul>\n<p>Built with TypeScript, but it\'s primary target is JavaScript apps. Hadronâ€™s API embraces current ECMAScript standards, with the cherry of good IDE support via codebase types declarations on top.</p>'}},pathContext:{relativePath:"GDK>../docs/basics/index.md"}}}});
//# sourceMappingURL=path---docs-basics-index-0dc4afe85478f91c26af.js.map